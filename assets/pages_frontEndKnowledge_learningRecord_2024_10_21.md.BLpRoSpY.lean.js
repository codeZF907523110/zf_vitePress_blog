import{_ as l,c as i,aQ as a,o}from"./chunks/framework.D1tMLlJQ.js";const _=JSON.parse('{"title":"2024-10-21 问题笔记","description":"","frontmatter":{},"headers":[],"relativePath":"pages/frontEndKnowledge/learningRecord/2024_10_21.md","filePath":"pages/frontEndKnowledge/learningRecord/2024_10_21.md","lastUpdated":1744461726000}'),r={name:"pages/frontEndKnowledge/learningRecord/2024_10_21.md"};function t(n,e,d,p,c,s){return o(),i("div",null,e[0]||(e[0]=[a('<h1 id="_2024-10-21-问题笔记" tabindex="-1">2024-10-21 问题笔记 <a class="header-anchor" href="#_2024-10-21-问题笔记" aria-label="Permalink to &quot;2024-10-21 问题笔记&quot;">​</a></h1><h2 id="_1-css实现渐变背景加动画旋转-背景模糊" tabindex="-1">1. css实现渐变背景加动画旋转，背景模糊 <a class="header-anchor" href="#_1-css实现渐变背景加动画旋转-背景模糊" aria-label="Permalink to &quot;1. css实现渐变背景加动画旋转，背景模糊&quot;">​</a></h2><h2 id="_2-colorthief库-提取图片中的颜色" tabindex="-1">2. <code>colorthief</code>库-提取图片中的颜色 <a class="header-anchor" href="#_2-colorthief库-提取图片中的颜色" aria-label="Permalink to &quot;2. `colorthief`库-提取图片中的颜色&quot;">​</a></h2><h2 id="_3-mix-blend-mode混合模式" tabindex="-1">3. <code>mix-blend-mode</code>混合模式 <a class="header-anchor" href="#_3-mix-blend-mode混合模式" aria-label="Permalink to &quot;3. `mix-blend-mode`混合模式&quot;">​</a></h2><ul><li><p>normal：这是默认值，表示不应用混合模式。</p></li><li><p>multiply：通过相乘的方式混合元素的颜色。</p></li><li><p>screen：通过屏幕的方式混合元素的颜色。</p></li><li><p>overlay：在基础颜色的上层应用颜色。</p></li><li><p>darken：取两个图层中较暗的颜色。</p></li><li><p>lighten：取两个图层中较亮的颜色。</p></li><li><p>color-dodge：颜色减淡以避免底层颜色中的颜色。</p></li><li><p>color-burn：通过加深颜色来避免底层颜色中的颜色。</p></li><li><p>hard-light：在正常的光照下模拟强光源的效果。</p></li><li><p>soft-light：在正常的光照下模拟柔光源的效果。</p></li><li><p>difference：显示两个图层中的差异。</p></li><li><p>exclusion：类似于差异模式，但具有更明亮的对比度。</p></li><li><p>hue：保留底层颜色的色调，同时更改亮度和饱和度。</p></li><li><p>saturation：保留底层颜色的饱和度，同时更改亮度和色调。</p></li><li><p>color：保留底层颜色的色调和饱和度，更改亮度。</p></li><li><p>luminosity：保留底层颜色的亮度，更改色调和饱和度。</p></li></ul>',5)]))}const m=l(r,[["render",t]]);export{_ as __pageData,m as default};

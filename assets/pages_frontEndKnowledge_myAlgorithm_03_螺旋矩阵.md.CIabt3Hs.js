import{_ as n,c as a,aQ as l,o as p}from"./chunks/framework.D3lXAOHM.js";const i=JSON.parse('{"title":"螺旋矩阵","description":"","frontmatter":{},"headers":[],"relativePath":"pages/frontEndKnowledge/myAlgorithm/03_螺旋矩阵.md","filePath":"pages/frontEndKnowledge/myAlgorithm/03_螺旋矩阵.md","lastUpdated":1744461726000}'),o={name:"pages/frontEndKnowledge/myAlgorithm/03_螺旋矩阵.md"};function e(D,s,r,t,c,y){return p(),a("div",null,s[0]||(s[0]=[l(`<h1 id="螺旋矩阵" tabindex="-1">螺旋矩阵 <a class="header-anchor" href="#螺旋矩阵" aria-label="Permalink to &quot;螺旋矩阵&quot;">​</a></h1><blockquote><p>力扣id=54 <a href="https://leetcode.cn/problems/spiral-matrix/description/" target="_blank" rel="noreferrer">螺旋矩阵</a></p></blockquote><blockquote><p>题目： 给你一个 m 行 n 列的矩阵 matrix ，请按照 顺时针螺旋顺序 ，返回矩阵中的所有元素。 示例： <img src="https://assets.leetcode.com/uploads/2020/11/13/spiral1.jpg" alt="螺旋矩阵"></p><blockquote><p>输入：matrix = [[1,2,3],[4,5,6],[7,8,9]]</p></blockquote><blockquote><p>输出：[1,2,3,6,9,8,7,4,5]</p></blockquote></blockquote><blockquote><p>思路：</p><ol><li>矩阵遍历顺序：上、右、下、左，重复以上步骤，直到矩阵为空。</li><li>定义上、右、下、左的变量</li><li>使用while循环，判断矩阵是否为空，不为空则进行遍历，遍历结束后，将矩阵缩小一圈，继续遍历。</li></ol></blockquote><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#569CD6;">var</span><span style="color:#DCDCAA;"> spiralOrder</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">matrix</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#569CD6;">    const</span><span style="color:#4FC1FF;"> res</span><span style="color:#D4D4D4;"> = []</span></span>
<span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (!</span><span style="color:#9CDCFE;">matrix</span><span style="color:#D4D4D4;"> || !</span><span style="color:#9CDCFE;">matrix</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;">) </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> []</span></span>
<span class="line"><span style="color:#6A9955;">    // 由上右下左的方向转动，定义上右下左的变量</span></span>
<span class="line"><span style="color:#569CD6;">    let</span><span style="color:#9CDCFE;"> top</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">right</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">matrix</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">].</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;"> - </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">bottom</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">matrix</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;"> - </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">left</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span></span>
<span class="line"><span style="color:#C586C0;">    while</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">true</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#6A9955;">        //遍历上</span></span>
<span class="line"><span style="color:#C586C0;">        for</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> i</span><span style="color:#D4D4D4;">=</span><span style="color:#9CDCFE;">left</span><span style="color:#D4D4D4;">;</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">&lt;=</span><span style="color:#9CDCFE;">right</span><span style="color:#D4D4D4;">;</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">++) </span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">matrix</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">top</span><span style="color:#D4D4D4;">][</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#9CDCFE;">        top</span><span style="color:#D4D4D4;">++ </span></span>
<span class="line"><span style="color:#C586C0;">        if</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">top</span><span style="color:#D4D4D4;"> &gt; </span><span style="color:#9CDCFE;">bottom</span><span style="color:#D4D4D4;">) </span><span style="color:#C586C0;">break</span></span>
<span class="line"><span style="color:#6A9955;">        // 遍历右</span></span>
<span class="line"><span style="color:#C586C0;">        for</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> i</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">top</span><span style="color:#D4D4D4;">;</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">&lt;=</span><span style="color:#9CDCFE;">bottom</span><span style="color:#D4D4D4;">;</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">++) </span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">matrix</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">][</span><span style="color:#9CDCFE;">right</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#9CDCFE;">        right</span><span style="color:#D4D4D4;">--</span></span>
<span class="line"><span style="color:#C586C0;">        if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">left</span><span style="color:#D4D4D4;"> &gt; </span><span style="color:#9CDCFE;">right</span><span style="color:#D4D4D4;">) </span><span style="color:#C586C0;">break</span></span>
<span class="line"><span style="color:#6A9955;">        // 遍历下</span></span>
<span class="line"><span style="color:#C586C0;">        for</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> i</span><span style="color:#D4D4D4;">=</span><span style="color:#9CDCFE;">right</span><span style="color:#D4D4D4;">;</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">&gt;=</span><span style="color:#9CDCFE;">left</span><span style="color:#D4D4D4;">;</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">--) </span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">matrix</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">bottom</span><span style="color:#D4D4D4;">][</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#9CDCFE;">        bottom</span><span style="color:#D4D4D4;">--</span></span>
<span class="line"><span style="color:#C586C0;">        if</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">top</span><span style="color:#D4D4D4;">&gt;</span><span style="color:#9CDCFE;">bottom</span><span style="color:#D4D4D4;">)</span><span style="color:#C586C0;">break</span></span>
<span class="line"><span style="color:#6A9955;">        // 遍历左</span></span>
<span class="line"><span style="color:#C586C0;">        for</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> i</span><span style="color:#D4D4D4;">=</span><span style="color:#9CDCFE;">bottom</span><span style="color:#D4D4D4;">;</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">&gt;=</span><span style="color:#9CDCFE;">top</span><span style="color:#D4D4D4;">;</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">--) </span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">matrix</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">][</span><span style="color:#9CDCFE;">left</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#9CDCFE;">        left</span><span style="color:#D4D4D4;">++</span></span>
<span class="line"><span style="color:#C586C0;">        if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">left</span><span style="color:#D4D4D4;">&gt;</span><span style="color:#9CDCFE;">right</span><span style="color:#D4D4D4;">) </span><span style="color:#C586C0;">break</span><span style="color:#D4D4D4;">  </span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#C586C0;">    return</span><span style="color:#9CDCFE;"> res</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div>`,5)]))}const b=n(o,[["render",e]]);export{i as __pageData,b as default};

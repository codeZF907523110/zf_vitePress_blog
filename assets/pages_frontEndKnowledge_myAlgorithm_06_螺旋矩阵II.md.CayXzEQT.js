import{_ as n,c as a,aQ as l,o as p}from"./chunks/framework.D1tMLlJQ.js";const i=JSON.parse('{"title":"螺旋矩阵II","description":"","frontmatter":{},"headers":[],"relativePath":"pages/frontEndKnowledge/myAlgorithm/06_螺旋矩阵II.md","filePath":"pages/frontEndKnowledge/myAlgorithm/06_螺旋矩阵II.md","lastUpdated":1744461726000}'),o={name:"pages/frontEndKnowledge/myAlgorithm/06_螺旋矩阵II.md"};function e(D,s,t,r,c,y){return p(),a("div",null,s[0]||(s[0]=[l(`<h1 id="螺旋矩阵ii" tabindex="-1">螺旋矩阵II <a class="header-anchor" href="#螺旋矩阵ii" aria-label="Permalink to &quot;螺旋矩阵II&quot;">​</a></h1><blockquote><p>力扣id=59 <a href="https://leetcode.cn/problems/spiral-matrix-ii/" target="_blank" rel="noreferrer">螺旋矩阵II</a></p></blockquote><blockquote><p>题目： 给你一个正整数 n ，生成一个包含 1 到 n2 所有元素，且元素按顺时针顺序螺旋排列的 n x n 正方形矩阵 matrix 。</p></blockquote><blockquote><p>示例 1： <img src="https://assets.leetcode.com/uploads/2020/11/13/spiraln.jpg" alt="螺旋矩阵II"></p><blockquote><p>输入：n = 3</p><p>输出：[[1,2,3],[8,9,4],[7,6,5]]</p></blockquote></blockquote><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#569CD6;">var</span><span style="color:#DCDCAA;"> generateMatrix</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">n</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#569CD6;">    let</span><span style="color:#9CDCFE;"> top</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">right</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">n</span><span style="color:#D4D4D4;">-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">bottom</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">n</span><span style="color:#D4D4D4;">-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">left</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span></span>
<span class="line"><span style="color:#569CD6;">    let</span><span style="color:#9CDCFE;"> k</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">1</span></span>
<span class="line"><span style="color:#569CD6;">    let</span><span style="color:#9CDCFE;"> res</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#DCDCAA;"> Array</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">n</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">fill</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">map</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#569CD6;"> new</span><span style="color:#DCDCAA;"> Array</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">n</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">fill</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">))</span></span>
<span class="line"><span style="color:#C586C0;">    while</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">true</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#C586C0;">        for</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> i</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">left</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">&lt;=</span><span style="color:#9CDCFE;">right</span><span style="color:#D4D4D4;">;</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">++) </span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">top</span><span style="color:#D4D4D4;">][</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">] = </span><span style="color:#9CDCFE;">k</span><span style="color:#D4D4D4;">++</span></span>
<span class="line"><span style="color:#9CDCFE;">        top</span><span style="color:#D4D4D4;"> ++</span></span>
<span class="line"><span style="color:#C586C0;">        if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">top</span><span style="color:#D4D4D4;"> &gt; </span><span style="color:#9CDCFE;">bottom</span><span style="color:#D4D4D4;">) </span><span style="color:#C586C0;">break</span></span>
<span class="line"><span style="color:#C586C0;">        for</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> i</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">top</span><span style="color:#D4D4D4;">;</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">&lt;=</span><span style="color:#9CDCFE;">bottom</span><span style="color:#D4D4D4;">;</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">++) </span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">][</span><span style="color:#9CDCFE;">right</span><span style="color:#D4D4D4;">] = </span><span style="color:#9CDCFE;">k</span><span style="color:#D4D4D4;">++</span></span>
<span class="line"><span style="color:#9CDCFE;">        right</span><span style="color:#D4D4D4;"> --</span></span>
<span class="line"><span style="color:#C586C0;">        if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">left</span><span style="color:#D4D4D4;"> &gt; </span><span style="color:#9CDCFE;">right</span><span style="color:#D4D4D4;">) </span><span style="color:#C586C0;">break</span></span>
<span class="line"><span style="color:#C586C0;">        for</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> i</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">right</span><span style="color:#D4D4D4;">;</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">&gt;=</span><span style="color:#9CDCFE;">left</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">--) </span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">bottom</span><span style="color:#D4D4D4;">][</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">] = </span><span style="color:#9CDCFE;">k</span><span style="color:#D4D4D4;">++</span></span>
<span class="line"><span style="color:#9CDCFE;">        bottom</span><span style="color:#D4D4D4;"> --</span></span>
<span class="line"><span style="color:#C586C0;">        if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">top</span><span style="color:#D4D4D4;"> &gt; </span><span style="color:#9CDCFE;">bottom</span><span style="color:#D4D4D4;">) </span><span style="color:#C586C0;">break</span></span>
<span class="line"><span style="color:#C586C0;">        for</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> i</span><span style="color:#D4D4D4;">=</span><span style="color:#9CDCFE;">bottom</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">&gt;=</span><span style="color:#9CDCFE;">top</span><span style="color:#D4D4D4;">;</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">--) </span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">][</span><span style="color:#9CDCFE;">left</span><span style="color:#D4D4D4;">] = </span><span style="color:#9CDCFE;">k</span><span style="color:#D4D4D4;">++</span></span>
<span class="line"><span style="color:#9CDCFE;">        left</span><span style="color:#D4D4D4;"> ++</span></span>
<span class="line"><span style="color:#C586C0;">        if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">left</span><span style="color:#D4D4D4;"> &gt; </span><span style="color:#9CDCFE;">right</span><span style="color:#D4D4D4;">) </span><span style="color:#C586C0;">break</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#C586C0;">    return</span><span style="color:#9CDCFE;"> res</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div>`,5)]))}const E=n(o,[["render",e]]);export{i as __pageData,E as default};

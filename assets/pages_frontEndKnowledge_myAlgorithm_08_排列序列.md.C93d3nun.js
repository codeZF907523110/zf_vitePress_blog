import{_ as n,c as a,aQ as l,o as p}from"./chunks/framework.D3lXAOHM.js";const C=JSON.parse('{"title":"排列序列","description":"","frontmatter":{},"headers":[],"relativePath":"pages/frontEndKnowledge/myAlgorithm/08_排列序列.md","filePath":"pages/frontEndKnowledge/myAlgorithm/08_排列序列.md","lastUpdated":1744461726000}'),o={name:"pages/frontEndKnowledge/myAlgorithm/08_排列序列.md"};function e(r,s,t,D,c,y){return p(),a("div",null,s[0]||(s[0]=[l(`<h1 id="排列序列" tabindex="-1">排列序列 <a class="header-anchor" href="#排列序列" aria-label="Permalink to &quot;排列序列&quot;">​</a></h1><blockquote><p>力扣id=60 <a href="https://leetcode.cn/problems/permutation-sequence/description/" target="_blank" rel="noreferrer">排列序列</a></p></blockquote><blockquote><p>题目：给出集合 [1,2,3,...,n]，其所有元素共有 n! 种排列。</p><p>按大小顺序列出所有排列情况，并一一标记，当 n = 3 时, 所有排列如下：</p><ul><li>&quot;123&quot;</li><li>&quot;132&quot;</li><li>&quot;213&quot;</li><li>&quot;231&quot;</li><li>&quot;312&quot;</li><li>&quot;321&quot;</li></ul></blockquote><blockquote><p>示例1：</p><blockquote><p>输入：n = 3, k = 3</p><p>输出：&quot;213&quot;</p></blockquote></blockquote><blockquote><p>原理：</p><ol><li>回溯：</li><li>创建一个0~n的数组，利用回溯全排列，创建count记录当前排列的个数，当count等于k时，返回当前排列</li></ol></blockquote><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#569CD6;">var</span><span style="color:#DCDCAA;"> getPermutation</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">n</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">k</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#569CD6;">    let</span><span style="color:#9CDCFE;"> res</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">count</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span></span>
<span class="line"><span style="color:#569CD6;">    const</span><span style="color:#4FC1FF;"> nums</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#DCDCAA;"> Array</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">n</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">fill</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">map</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">index</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#9CDCFE;"> index</span><span style="color:#D4D4D4;">+</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;">    const</span><span style="color:#4FC1FF;"> used</span><span style="color:#D4D4D4;"> = {}</span></span>
<span class="line"><span style="color:#569CD6;">    const</span><span style="color:#DCDCAA;"> dfs</span><span style="color:#D4D4D4;"> = (</span><span style="color:#9CDCFE;">path</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#C586C0;">        if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">path</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;"> === </span><span style="color:#9CDCFE;">nums</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#9CDCFE;">            count</span><span style="color:#D4D4D4;"> ++</span></span>
<span class="line"><span style="color:#C586C0;">            if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">count</span><span style="color:#D4D4D4;"> === </span><span style="color:#9CDCFE;">k</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#9CDCFE;">                res</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">path</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">join</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#C586C0;">                return</span></span>
<span class="line"><span style="color:#D4D4D4;">            }</span></span>
<span class="line"><span style="color:#D4D4D4;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">        for</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> item</span><span style="color:#569CD6;"> of</span><span style="color:#9CDCFE;"> nums</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#C586C0;">            if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">used</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">]) </span><span style="color:#C586C0;">continue</span></span>
<span class="line"><span style="color:#9CDCFE;">            path</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#9CDCFE;">            used</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">] = </span><span style="color:#569CD6;">true</span></span>
<span class="line"><span style="color:#DCDCAA;">            dfs</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">path</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#9CDCFE;">            path</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">pop</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#9CDCFE;">            used</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">] = </span><span style="color:#569CD6;">false</span></span>
<span class="line"><span style="color:#D4D4D4;">        }</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA;">    dfs</span><span style="color:#D4D4D4;">([])</span></span>
<span class="line"><span style="color:#C586C0;">    return</span><span style="color:#9CDCFE;"> res</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div>`,6)]))}const u=n(o,[["render",e]]);export{C as __pageData,u as default};

import{_ as n,c as a,aQ as l,o as p}from"./chunks/framework.D3lXAOHM.js";const i=JSON.parse('{"title":"合并两个有序数组","description":"","frontmatter":{},"headers":[],"relativePath":"pages/frontEndKnowledge/myAlgorithm/17_合并两个有序数组.md","filePath":"pages/frontEndKnowledge/myAlgorithm/17_合并两个有序数组.md","lastUpdated":1744461726000}'),o={name:"pages/frontEndKnowledge/myAlgorithm/17_合并两个有序数组.md"};function e(r,s,D,c,t,y){return p(),a("div",null,s[0]||(s[0]=[l(`<h1 id="合并两个有序数组" tabindex="-1">合并两个有序数组 <a class="header-anchor" href="#合并两个有序数组" aria-label="Permalink to &quot;合并两个有序数组&quot;">​</a></h1><blockquote><p>力扣id=88 <a href="https://leetcode.cn/problems/merge-sorted-array/description/" target="_blank" rel="noreferrer">合并两个有序数组</a></p></blockquote><blockquote><p>题目：</p><p>给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。请你 合并 nums2 到 nums1 中，使合并后的数组同样按 非递减顺序 排列。</p></blockquote><blockquote><p>示例：</p><blockquote><p>输入：nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3</p><p>输出：[1,2,2,3,5,6]</p><p>解释：需要合并 [1,2,3] 和 [2,5,6] 。</p></blockquote></blockquote><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#569CD6;">var</span><span style="color:#DCDCAA;"> merge</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">nums1</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">m</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">nums2</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">n</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#569CD6;">    let</span><span style="color:#9CDCFE;"> i</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">m</span><span style="color:#D4D4D4;"> - </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">j</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">n</span><span style="color:#D4D4D4;"> - </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">k</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">nums1</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;"> - </span><span style="color:#B5CEA8;">1</span></span>
<span class="line"><span style="color:#C586C0;">    while</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;"> &gt;= </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;"> &amp;&amp; </span><span style="color:#9CDCFE;">j</span><span style="color:#D4D4D4;"> &gt;= </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#C586C0;">        if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">nums1</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">] &gt; </span><span style="color:#9CDCFE;">nums2</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">j</span><span style="color:#D4D4D4;">]) {</span></span>
<span class="line"><span style="color:#9CDCFE;">            nums1</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">k</span><span style="color:#D4D4D4;">] = </span><span style="color:#9CDCFE;">nums1</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#9CDCFE;">            i</span><span style="color:#D4D4D4;">--</span></span>
<span class="line"><span style="color:#D4D4D4;">        } </span><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">            nums1</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">k</span><span style="color:#D4D4D4;">] = </span><span style="color:#9CDCFE;">nums2</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">j</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#9CDCFE;">            j</span><span style="color:#D4D4D4;">--</span></span>
<span class="line"><span style="color:#D4D4D4;">        }</span></span>
<span class="line"><span style="color:#9CDCFE;">        k</span><span style="color:#D4D4D4;">--</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#C586C0;">    while</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">j</span><span style="color:#D4D4D4;"> &gt;= </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#9CDCFE;">        nums1</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">k</span><span style="color:#D4D4D4;">] = </span><span style="color:#9CDCFE;">nums2</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">j</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#9CDCFE;">        j</span><span style="color:#D4D4D4;">--</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#C586C0;">    return</span><span style="color:#9CDCFE;"> nums1</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>`,5)]))}const m=n(o,[["render",e]]);export{i as __pageData,m as default};

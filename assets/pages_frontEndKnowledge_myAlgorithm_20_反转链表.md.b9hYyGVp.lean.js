import{_ as n,c as a,aQ as l,o as p}from"./chunks/framework.D1tMLlJQ.js";const y=JSON.parse('{"title":"反转链表","description":"","frontmatter":{},"headers":[],"relativePath":"pages/frontEndKnowledge/myAlgorithm/20_反转链表.md","filePath":"pages/frontEndKnowledge/myAlgorithm/20_反转链表.md","lastUpdated":1744461726000}'),e={name:"pages/frontEndKnowledge/myAlgorithm/20_反转链表.md"};function o(r,s,t,c,D,C){return p(),a("div",null,s[0]||(s[0]=[l(`<h1 id="反转链表" tabindex="-1">反转链表 <a class="header-anchor" href="#反转链表" aria-label="Permalink to &quot;反转链表&quot;">​</a></h1><blockquote><p>力扣id: 206 <a href="https://leetcode.cn/problems/reverse-linked-list/description/" target="_blank" rel="noreferrer">反转链表</a></p></blockquote><blockquote><p>题目：</p><p>给你单链表的头节点 head ，请你反转链表，并返回反转后的链表。</p></blockquote><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#569CD6;">var</span><span style="color:#DCDCAA;"> reverseList</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">head</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#569CD6;">  let</span><span style="color:#9CDCFE;"> pre</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">null</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">next</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">head</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">curr</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">head</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">list</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">head</span></span>
<span class="line"><span style="color:#C586C0;">  if</span><span style="color:#D4D4D4;"> (!</span><span style="color:#9CDCFE;">head</span><span style="color:#D4D4D4;"> || !</span><span style="color:#9CDCFE;">head</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">next</span><span style="color:#D4D4D4;">) </span><span style="color:#C586C0;">return</span><span style="color:#9CDCFE;"> head</span></span>
<span class="line"><span style="color:#C586C0;">  while</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">list</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">next</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#9CDCFE;">    list</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">list</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">next</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">  while</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">curr</span><span style="color:#D4D4D4;"> !== </span><span style="color:#9CDCFE;">list</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#9CDCFE;">    next</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">curr</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">next</span></span>
<span class="line"><span style="color:#9CDCFE;">    curr</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">next</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">pre</span></span>
<span class="line"><span style="color:#9CDCFE;">    pre</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">curr</span></span>
<span class="line"><span style="color:#9CDCFE;">    curr</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">next</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">  list</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">next</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">pre</span></span>
<span class="line"><span style="color:#C586C0;">  return</span><span style="color:#9CDCFE;"> list</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div>`,4)]))}const b=n(e,[["render",o]]);export{y as __pageData,b as default};

import{_ as n,c as a,aQ as l,o as p}from"./chunks/framework.D3lXAOHM.js";const C=JSON.parse('{"title":"三个数的最大乘积","description":"","frontmatter":{},"headers":[],"relativePath":"pages/frontEndKnowledge/myAlgorithm/28_三个数的最大乘积.md","filePath":"pages/frontEndKnowledge/myAlgorithm/28_三个数的最大乘积.md","lastUpdated":1744461726000}'),o={name:"pages/frontEndKnowledge/myAlgorithm/28_三个数的最大乘积.md"};function e(t,s,r,c,D,y){return p(),a("div",null,s[0]||(s[0]=[l(`<h1 id="三个数的最大乘积" tabindex="-1">三个数的最大乘积 <a class="header-anchor" href="#三个数的最大乘积" aria-label="Permalink to &quot;三个数的最大乘积&quot;">​</a></h1><blockquote><p>力扣id=628 <a href="https://leetcode.cn/problems/maximum-product-of-three-numbers/description/" target="_blank" rel="noreferrer">text</a></p></blockquote><blockquote><p>题目：</p><p>给你一个整型数组 nums ，在数组中找出由三个数组成的最大乘积，并输出这个乘积。</p></blockquote><blockquote><p>示例：</p><blockquote><p>输入：nums = [1,2,3]</p><p>输出：6</p></blockquote></blockquote><blockquote><p>思路：</p><ul><li>假设数组里面有两个以上的负数</li><li>那么最大的乘积一定包含两个负数，一个正数</li><li>那么最大的乘积一定包含三个正数</li><li>所以只需要将最大的三个正数的乘积，最小的两个负数和最大的正数乘积相乘即可</li></ul></blockquote><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#569CD6;">var</span><span style="color:#DCDCAA;"> maximumProduct</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">nums</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#9CDCFE;">    nums</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">sort</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">a</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">b</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#9CDCFE;"> b</span><span style="color:#D4D4D4;">-</span><span style="color:#9CDCFE;">a</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;">    const</span><span style="color:#4FC1FF;"> n</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">nums</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span></span>
<span class="line"><span style="color:#C586C0;">    return</span><span style="color:#9CDCFE;"> Math</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">max</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#9CDCFE;">        nums</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">] * </span><span style="color:#9CDCFE;">nums</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">] * </span><span style="color:#9CDCFE;">nums</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#9CDCFE;">        nums</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">n</span><span style="color:#D4D4D4;">-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">] * </span><span style="color:#9CDCFE;">nums</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">n</span><span style="color:#D4D4D4;">-</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">] * </span><span style="color:#9CDCFE;">nums</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">    )</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,6)]))}const u=n(o,[["render",e]]);export{C as __pageData,u as default};

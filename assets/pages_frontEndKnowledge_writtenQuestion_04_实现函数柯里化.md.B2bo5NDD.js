import{_ as n,c as a,aQ as l,o as p}from"./chunks/framework.D3lXAOHM.js";const i=JSON.parse('{"title":"实现函数柯里化","description":"","frontmatter":{},"headers":[],"relativePath":"pages/frontEndKnowledge/writtenQuestion/04_实现函数柯里化.md","filePath":"pages/frontEndKnowledge/writtenQuestion/04_实现函数柯里化.md","lastUpdated":1744461726000}'),o={name:"pages/frontEndKnowledge/writtenQuestion/04_实现函数柯里化.md"};function e(D,s,r,c,t,y){return p(),a("div",null,s[0]||(s[0]=[l(`<h1 id="实现函数柯里化" tabindex="-1">实现函数柯里化 <a class="header-anchor" href="#实现函数柯里化" aria-label="Permalink to &quot;实现函数柯里化&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title"><strong>函数柯里化</strong></p><p>函数柯里化是指利用 js 的闭包径特性，将函数的参数进行分组，每次传入一个参数，返回一个函数，直到传入的参数个数等于函数的参数个数，才执行函数。</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#DCDCAA;"> keli</span><span style="color:#D4D4D4;"> = (</span><span style="color:#9CDCFE;">fn</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#C586C0;">  return</span><span style="color:#569CD6;"> function</span><span style="color:#DCDCAA;"> keli1</span><span style="color:#D4D4D4;">(...</span><span style="color:#9CDCFE;">args1</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">args1</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;"> &gt;= </span><span style="color:#9CDCFE;">fn</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#C586C0;">      return</span><span style="color:#DCDCAA;"> fn</span><span style="color:#D4D4D4;">(...</span><span style="color:#9CDCFE;">args1</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#C586C0;">    return</span><span style="color:#D4D4D4;"> (...</span><span style="color:#9CDCFE;">args2</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#C586C0;">      return</span><span style="color:#DCDCAA;"> keli1</span><span style="color:#D4D4D4;">(...</span><span style="color:#9CDCFE;">args1</span><span style="color:#D4D4D4;">, ...</span><span style="color:#9CDCFE;">args2</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> sum</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">a</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">b</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">c</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">d</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#C586C0;">  return</span><span style="color:#9CDCFE;"> a</span><span style="color:#D4D4D4;"> + </span><span style="color:#9CDCFE;">b</span><span style="color:#D4D4D4;"> + </span><span style="color:#9CDCFE;">c</span><span style="color:#D4D4D4;"> + </span><span style="color:#9CDCFE;">d</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> sumKeli</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">keli</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">sum</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">sumKeli</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">))</span></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">sumKeli</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)(</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">))</span></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">sumKeli</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)(</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">)(</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">))</span></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">sumKeli</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)(</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">)(</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">)(</span><span style="color:#B5CEA8;">4</span><span style="color:#D4D4D4;">))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div></div>`,2)]))}const u=n(o,[["render",e]]);export{i as __pageData,u as default};

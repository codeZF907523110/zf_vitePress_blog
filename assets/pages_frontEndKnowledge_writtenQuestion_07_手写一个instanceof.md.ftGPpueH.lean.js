import{_ as n,c as a,aQ as l,o as p}from"./chunks/framework.D3lXAOHM.js";const C=JSON.parse('{"title":"手写一个instanceof","description":"","frontmatter":{},"headers":[],"relativePath":"pages/frontEndKnowledge/writtenQuestion/07_手写一个instanceof.md","filePath":"pages/frontEndKnowledge/writtenQuestion/07_手写一个instanceof.md","lastUpdated":1744461726000}'),e={name:"pages/frontEndKnowledge/writtenQuestion/07_手写一个instanceof.md"};function o(t,s,r,c,D,i){return p(),a("div",null,s[0]||(s[0]=[l(`<h1 id="手写一个instanceof" tabindex="-1">手写一个instanceof <a class="header-anchor" href="#手写一个instanceof" aria-label="Permalink to &quot;手写一个instanceof&quot;">​</a></h1><div class="language-TypeScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">TypeScript</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#569CD6;">  const</span><span style="color:#DCDCAA;"> instanceOf</span><span style="color:#D4D4D4;"> = (</span><span style="color:#9CDCFE;">left</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">right</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#569CD6;">    let</span><span style="color:#9CDCFE;"> lp</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">left</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">__proto__</span></span>
<span class="line"><span style="color:#569CD6;">    let</span><span style="color:#9CDCFE;"> rp</span><span style="color:#D4D4D4;"> = </span><span style="color:#4EC9B0;">right</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">prototype</span></span>
<span class="line"><span style="color:#C586C0;">    while</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">true</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#C586C0;">      if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">lp</span><span style="color:#D4D4D4;"> === </span><span style="color:#569CD6;">null</span><span style="color:#D4D4D4;">) </span><span style="color:#C586C0;">return</span><span style="color:#569CD6;"> false</span></span>
<span class="line"><span style="color:#C586C0;">      if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">lp</span><span style="color:#D4D4D4;"> === </span><span style="color:#9CDCFE;">rp</span><span style="color:#D4D4D4;">) </span><span style="color:#C586C0;">return</span><span style="color:#569CD6;"> true</span></span>
<span class="line"><span style="color:#9CDCFE;">      lp</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">lp</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">__proto__</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,2)]))}const d=n(e,[["render",o]]);export{C as __pageData,d as default};

import{_ as n,c as a,aQ as l,o as p}from"./chunks/framework.D1tMLlJQ.js";const C=JSON.parse('{"title":"手写节流防抖","description":"","frontmatter":{},"headers":[],"relativePath":"pages/frontEndKnowledge/writtenQuestion/08_手写节流防抖.md","filePath":"pages/frontEndKnowledge/writtenQuestion/08_手写节流防抖.md","lastUpdated":1744461726000}'),o={name:"pages/frontEndKnowledge/writtenQuestion/08_手写节流防抖.md"};function e(r,s,t,D,c,y){return p(),a("div",null,s[0]||(s[0]=[l(`<h1 id="手写节流防抖" tabindex="-1">手写节流防抖 <a class="header-anchor" href="#手写节流防抖" aria-label="Permalink to &quot;手写节流防抖&quot;">​</a></h1><ol><li><strong>节流</strong></li></ol><div class="language-TypeScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">TypeScript</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#569CD6;">  const</span><span style="color:#DCDCAA;"> throttle</span><span style="color:#D4D4D4;"> = (</span><span style="color:#DCDCAA;">fn</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">Function</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">delay</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">number</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">arg</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">any</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#569CD6;">    let</span><span style="color:#9CDCFE;"> oldDate</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span></span>
<span class="line"><span style="color:#C586C0;">    return</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#569CD6;">      const</span><span style="color:#4FC1FF;"> nowDate</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#DCDCAA;"> Date</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">getTime</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#C586C0;">      if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">nowDate</span><span style="color:#D4D4D4;"> - </span><span style="color:#9CDCFE;">oldDate</span><span style="color:#D4D4D4;"> &gt; </span><span style="color:#9CDCFE;">delay</span><span style="color:#D4D4D4;"> || </span><span style="color:#9CDCFE;">oldDate</span><span style="color:#D4D4D4;"> === </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#9CDCFE;">        oldDate</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">nowDate</span></span>
<span class="line"><span style="color:#C586C0;">        return</span><span style="color:#DCDCAA;"> fn</span><span style="color:#D4D4D4;">(...</span><span style="color:#9CDCFE;">arg</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">      }</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ol start="2"><li><strong>防抖</strong></li></ol><div class="language-TypeScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">TypeScript</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#569CD6;">  const</span><span style="color:#DCDCAA;"> debounce</span><span style="color:#D4D4D4;"> = (</span><span style="color:#DCDCAA;">fn</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">Function</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">delay</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">number</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">arg</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">any</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#569CD6;">    let</span><span style="color:#9CDCFE;"> timer</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">any</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">null</span></span>
<span class="line"><span style="color:#C586C0;">    return</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#C586C0;">      if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">timer</span><span style="color:#D4D4D4;">) </span><span style="color:#DCDCAA;">clearTimeout</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">timer</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#9CDCFE;">      timer</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">setTimeout</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">        timer</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">null</span></span>
<span class="line"><span style="color:#C586C0;">        return</span><span style="color:#DCDCAA;"> fn</span><span style="color:#D4D4D4;">(...</span><span style="color:#9CDCFE;">arg</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">      }, </span><span style="color:#9CDCFE;">delay</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,5)]))}const d=n(o,[["render",e]]);export{C as __pageData,d as default};
